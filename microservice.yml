omg: 1
info:
  version: 1.0.0
  title: Trello
  description: This is an trello service
  contact:
    name: Rohit Shetty
    url: https://github.com/ht68rohit
    email: rohits@heaptrace.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
lifecycle:
  startup:
    command: ["microservice-trello"]
health:
  http:
    path: /health
    port: 3000
actions:
  createBoard:
    help: Create new board in trello.
    http:
      port: 3000
      method: post
      path: /createBoard
      contentType: application/json
    arguments:
      boardName:
        type: string
        in: requestBody
        required: true
        help: The name for new board.
    output:
      type: object
      contentType: application/json
  getBoard:
    help: Get board details from trello.
    http:
      port: 3000
      method: post
      path: /getBoard
      contentType: application/json
    arguments:
      boardId:
        type: string
        in: requestBody
        required: true
        help: The board ID of trello account.
    output:
      type: object
      contentType: application/json
  createList:
    help: Create new list in trello.
    http:
      port: 3000
      method: post
      path: /createList
      contentType: application/json
    arguments:
      boardId:
        type: string
        in: requestBody
        required: true
        help: The board ID to where to create list.
      listName:
        type: string
        in: requestBody
        required: true
        help: The name for new list.
    output:
      type: object
      contentType: application/json
  getLists:
    help: Get all list details from trello board.
    http:
      port: 3000
      method: post
      path: /getLists
      contentType: application/json
    arguments:
      boardId:
        type: string
        in: requestBody
        required: true
        help: The board ID of trello account.
    output:
      type: list
      contentType: application/json
  addCard:
    help: Create new card on list.
    http:
      port: 3000
      method: post
      path: /addCard
      contentType: application/json
    arguments:
      name:
        type: string
        in: requestBody
        required: true
        help: The name of card to be added.
      description:
        type: string
        in: requestBody
        help: The description for the card. 
      listId:
        type: string
        in: requestBody
        required: true
        help: The ID of list where card has to add. 
    output:
      type: object
      contentType: application/json
  getCards:
    help: Get all card details from all lists.
    http:
      port: 3000
      method: post
      path: /getCards
      contentType: application/json
    arguments:
      boardId:
        type: string
        in: requestBody
        required: true
        help: The board ID of trello account.
    output:
      type: list
      contentType: application/json
  moveCard:
    help: Move card from one list to another.
    http:
      port: 3000
      method: post
      path: /moveCard
      contentType: application/json
    arguments:
      cardId:
        type: string
        in: requestBody
        required: true
        help: The ID of card to move.
      listId:
        type: string
        in: requestBody
        required: true
        help: The ID of list where to move the card.
    output:
      type: object
      contentType: application/json
  copyCard:
    help: Copy card from one list to another.
    http:
      port: 3000
      method: post
      path: /copyCard
      contentType: application/json
    arguments:
      cardId:
        type: string
        in: requestBody
        required: true
        help: The ID of card to copy.
      listId:
        type: string
        in: requestBody
        required: true
        help: The ID of list where to copy the card.
    output:
      type: object
      contentType: application/json
  receive:
    help: Start receiving newly added card details from board list.
    events:
      card:
        help: Triggered anytime when any new card is added in list.
        arguments:
          boardId:
            type: string
            in: requestBody
            required: true
            help: The board ID to subscribe.
          listId:
            type: string
            in: requestBody
            help: The list ID to subscribe the list.
          existing:
            type: boolean
            in: requestBody
            required: true
            help: Set true to get all existing cards or false to get only new card added to board after subscription.
        http: 
          port: 3000
          subscribe:
            method: post
            path: /subscribe
            contentType: application/json
        output:
          contentType: application/json
          type: object
  deleteBoard:
    help: Delete board from trello.
    http:
      port: 3000
      method: post
      path: /deleteBoard
      contentType: application/json
    arguments:
      boardId:
        type: string
        in: requestBody
        required: true
        help: The board ID to delete.
    output:
      type: object
      contentType: application/json
  getAllBoards:
    help: Get board details from trello.
    http:
      port: 3000
      method: post
      path: /getAllBoards
      contentType: application/json
    arguments:
      username:
        type: string
        in: requestBody
        required: true
        help: The username of trello account.
    output:
      type: list
      contentType: application/json
environment:
  API_KEY:
    type: string
    required: true
    help: The API key of trello account.
  ACCESS_TOKEN:
    type: string
    required: true
    help: The access token of trello account.
